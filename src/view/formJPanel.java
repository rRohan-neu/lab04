/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.awt.CardLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import static java.awt.image.ImageObserver.HEIGHT;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.*;
import java.awt.*;
import model.User;
import java.util.Date;
import java.util.Calendar;
import java.text.SimpleDateFormat;

/**
 *
 * @author Rohan
 */
public class formJPanel extends javax.swing.JPanel {
    
    JPanel bottomPanel;

    /**
     * Creates new form formJPanel
     */
    public formJPanel() {
        initComponents();
    }
    public formJPanel(JPanel bottomPanel){
         initComponents();
         this.bottomPanel = bottomPanel;
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headinglabel = new java.awt.Label();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        genderComboBox = new javax.swing.JComboBox<>();
        GenderLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        ageTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        hobbiesTextField = new javax.swing.JTextField();
        hobbiesLabel = new javax.swing.JLabel();
        submitToggleButton = new javax.swing.JToggleButton();
        pictureButton = new javax.swing.JToggleButton();
        DateChooser = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(51, 153, 255));
        setForeground(new java.awt.Color(153, 51, 0));

        headinglabel.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        headinglabel.setText("Form for Students");

        firstNameLabel.setText("First name:");

        firstNameTextField.setActionCommand("<Not Set>");

        lastNameLabel.setText("Last name:");

        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        genderComboBox.setSelectedIndex(-1);

        GenderLabel.setText("Gender:");

        ageLabel.setText("Age:");

        emailLabel.setText("Email:");

        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });

        hobbiesTextField.setCaretColor(new java.awt.Color(204, 204, 204));

        hobbiesLabel.setText("Hobbies:");

        submitToggleButton.setText("Submit");
        submitToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitToggleButtonActionPerformed(evt);
            }
        });

        pictureButton.setText("Upload Picture");
        pictureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pictureButtonActionPerformed(evt);
            }
        });

        DateChooser.setDateFormatString("dd-mm-yyyy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(240, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hobbiesLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(emailTextField)
                                .addComponent(hobbiesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GenderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(genderComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lastNameTextField)
                            .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(118, 118, 118))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(headinglabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(pictureButton)
                        .addGap(24, 24, 24)
                        .addComponent(submitToggleButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headinglabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GenderLabel)
                    .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ageLabel)
                        .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(emailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hobbiesLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hobbiesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitToggleButton)
                    .addComponent(pictureButton))
                .addContainerGap(107, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    
    
    private void submitToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitToggleButtonActionPerformed
        // TODO add your handling code here:
          try {
           User userObject = new User();

        userObject.setFirstName(this.firstNameTextField.getText());
        userObject.setLastName(this.lastNameTextField.getText());
        userObject.setEmail(this.emailTextField.getText());
        userObject.setGender(this.genderComboBox.getSelectedItem().toString());
        userObject.setAge(this.ageTextField.getText());
        userObject.setHobbies(this.hobbiesTextField.getText());
        userObject.setPhoto((ImageIcon)this.pictureButton.getIcon());
//      
            if (pictureButton.getIcon() != null) {
            userObject.setPhoto((ImageIcon)pictureButton.getIcon());
            System.out.println("Debug - Photo set successfully");
            }

//         if (DateChooser.getDate() != null) {
//            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd-MM-yyyy");
//            String dob = sdf.format(DateChooser.getDate());
//            userObject.setDateOfBirth(dob);
//            System.out.println("Debug - Date of Birth: " + dob);
//        } else {
//            JOptionPane.showMessageDialog(this, "Please select a date of birth", 
//                                        "Validation Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        
//        // Validation checks
        if (userObject.getFirstName().isEmpty() || userObject.getLastName().isEmpty() || 
            userObject.getGender().isEmpty() || userObject.getAge().isEmpty() || 
            userObject.getEmail().isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields must be filled, try again.", "Failed!", HEIGHT);
            return;
        }
//        
// Age validation
        if (!userObject.getAge().matches("\\d+") || Integer.parseInt(userObject.getAge()) < 0) {
            JOptionPane.showMessageDialog(this, "Enter valid Age ", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        
        // Email validation
        if (!userObject.getEmail().matches("^[A-Za-z0-9+_.-]+@(.+)$")) {
            JOptionPane.showMessageDialog(this, "Enter a valid email address!", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
//        java.util.Date currentDate = new java.util.Date();
//        if (DateChooser.getDate().after(currentDate)) {
//            JOptionPane.showMessageDialog(this, "Date of birth cannot be in the future", 
//                                        "Validation Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
        
//        java.util.Calendar dob = java.util.Calendar.getInstance();
//        java.util.Calendar today = java.util.Calendar.getInstance();
//        dob.setTime(DateChooser.getDate());
//        int calculatedAge = today.get(java.util.Calendar.YEAR) - dob.get(java.util.Calendar.YEAR);
//        if (today.get(java.util.Calendar.DAY_OF_YEAR) < dob.get(java.util.Calendar.DAY_OF_YEAR)) {
//            calculatedAge--;
//        }
//        
//        if (calculatedAge != Integer.parseInt(userObject.getAge())) {
//            JOptionPane.showMessageDialog(this, "Age does not match with date of birth", 
//                                        "Validation Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
        
        // Show success message using toString() method
        JOptionPane.showMessageDialog(this, userObject.toString(), "Success!!", HEIGHT, userObject.getPhoto());
        reviewJPanel reviewJPanelObject = new reviewJPanel(userObject);
        this.bottomPanel.add(reviewJPanelObject);
        CardLayout layout = (CardLayout) this.bottomPanel.getLayout();
        layout.next(bottomPanel);
        
   } 
    catch (NullPointerException ne) {
        System.out.println("Debug - NullPointerException: " + ne.getMessage());
        ne.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error processing form data: " + ne.getMessage(), 
                                    "Error", JOptionPane.ERROR_MESSAGE);
    } 
        catch (Exception e) {
        System.out.println("Debug - Unexpected error: " + e.getMessage());
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Unexpected error: " + e.getMessage(), 
                                    "Error", JOptionPane.ERROR_MESSAGE);
    }



           
    }//GEN-LAST:event_submitToggleButtonActionPerformed

    private void pictureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pictureButtonActionPerformed
        // TODO add your handling code here:
        
        JFileChooser file = new JFileChooser();
            if (file.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            try {
            BufferedImage img = ImageIO.read(file.getSelectedFile());
            Image edited_image = img.getScaledInstance(60, 80,
            Image.SCALE_SMOOTH);
            if (edited_image != null) {
            this.pictureButton.setIcon(new ImageIcon(edited_image));
            }
            
            }
            
            catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please upload image correctly.", "Error - Incorrect image", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
            }
            
            
    }//GEN-LAST:event_pictureButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JLabel GenderLabel;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JComboBox<String> genderComboBox;
    private java.awt.Label headinglabel;
    private javax.swing.JLabel hobbiesLabel;
    private javax.swing.JTextField hobbiesTextField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JToggleButton pictureButton;
    private javax.swing.JToggleButton submitToggleButton;
    // End of variables declaration//GEN-END:variables
}
